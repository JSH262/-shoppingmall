<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tjoeun.shoppingmall.dao.ProductOrderDAO">

	<!-- <typeAlias type="com.tjoeun.vo.MvcBoardVO" alias="MvcBoardVO" /> -->
	<insert id="insert" parameterType="ProductOrderVO">
		insert into product_order(user_id, id, product_id, product_amount, product_price, product_delivery_price, product_name, status, product_thumbnail,
					DELIVERY_NAME, DELIVERY_ADDR1, DELIVERY_ADDR2, DELIVERY_PHONE, DELIVERY_REQUEST_MSG, SELLER_ID)
		values(#{userId},
			<choose>
			    <when test="id != null">
					#{id}, 
			    </when>
			    <otherwise>
				    (select nvl(max(id) + 1, 0)
					from product_order
					where user_id = #{user_id}),
			    </otherwise>
			</choose>
			#{productId}, #{productAmount}, #{productPrice}, #{productDeliveryPrice}, #{productName}, #{status}, #{productThumbnail},
					#{deliveryName}, #{deliveryAddr1}, #{deliveryAddr2}, #{deliveryPhone}, #{deliveryRequestMsg}, #{sellerId})
	</insert>
	
	<select id="selectId" resultType="java.lang.Long" parameterType="ProductOrderVO">
		select nvl(max(id) + 1, 0)
		from product_order
		where user_id = #{userId}
	</select>
	
	<select id="selectList" parameterType="ProductOrderVO" resultType="ProductOrderVO">
		<choose>
		    <when test="choose != null and choose == 'breakdown'">
		    	select 
					t2.*,
					to_char(t2.product_amount, 'FM999,999,999') fmt_product_amount,
					to_char(t2.product_delivery_price, 'FM999,999,999') fmt_product_delivery_price,
					to_char(t2.product_price, 'FM999,999,999') fmt_product_price,
					to_char(t2.product_amount * t2.product_price + t2.product_delivery_price, 'FM999,999,999') fmt_total_product_price
					
				from (	select t1.*, rownum rnum
						from (	select 
									user_id, id, product_id, product_amount, product_price, product_delivery_price, product_name, status, product_thumbnail,
									create_date, modify_date, delivery_name, delivery_addr1, delivery_addr2, delivery_phone, delivery_request_msg   
								from product_order
								where 
									seller_id = #{sellerId}
									
									<if test="userId != null">
										and user_id = #{userId}
									</if>
									<if test="status != null">
										and status = #{status}
									</if>
									<if test="productName != null">
										and product_name = #{productName}
									</if>
									
																	
								order by id desc, product_id desc, product_name asc) t1
						where rownum <![CDATA[ <= ]]> #{endNo}) t2
				where rnum <![CDATA[ >= ]]> #{startNo}
		    </when>		    
		    <otherwise>
   				select t2.*
				from (	select t1.*, rownum rnum
						from (	select 
								    po.id, po.product_id, po.product_amount, po.product_price, po.product_delivery_price, po.product_name, 
								    po.status, po.product_thumbnail, to_char(po.create_date, 'YYYY-MM-DD') as create_date,
								    to_char(po.product_amount, 'FM999,999,999') fmt_product_amount,
								    to_char(po.product_delivery_price, 'FM999,999,999') fmt_product_delivery_price,
								    to_char(po.product_price, 'FM999,999,999') fmt_product_price,
								    to_char(po.product_amount * po.product_price + po.product_delivery_price, 'FM999,999,999') fmt_total_product_price,
								    nvl2(r.id, 'false', 'true') is_review
								from product_order po left join review r on po.id = r.product_order_id
								where po.user_id = #{userId}								
								order by po.id desc, po.product_id desc, po.product_name asc) t1
						where rownum <![CDATA[ <= ]]> #{endNo}) t2
				where rnum <![CDATA[ >= ]]> #{startNo}
		    </otherwise>
		</choose>
	</select>
	
	
	<select id="select" parameterType="ProductOrderVO" resultType="ProductOrderVO">
		select *
		from product_order
		where 1 = 1 
			<if test="userId != null">
				and user_id = #{userId}
			</if>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="productId != null">
				and product_id = #{productId}
			</if>
	</select>
	
	<select id="totalCount" parameterType="ProductOrderVO" resultType="int">
		<choose>
		    <when test="choose != null and choose == 'breakdown'">
				select count(*)
				from product_order
				where seller_id = #{sellerId}
					<if test="userId != null">
						and user_id = #{userId}
					</if>
					<if test="status != null">
						and status = #{status}
					</if>
					<if test="productName != null">
						and product_name = #{productName}
					</if>
		    </when>		    
		    <otherwise>
				select count(*)
				from product_order
				where user_id = #{userId}
		    </otherwise>
		</choose>
	</select>
	
	<update id="update" parameterType="ProductOrderVO">
		update product_order
		set MODIFY_DATE = sysdate 
			<if test="status">
				, status = #{status}
			</if>
		where user_id = #{userId} and id = #{id} and product_id = #{productId}
			<if test="sellerId != null">
				 and seller_id = #{sellerId}
			 </if>
	</update>
	
	
	
</mapper>














